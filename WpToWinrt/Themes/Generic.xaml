<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:WpToWinrt.Controls">

    <!--shared between controls-->
    <SolidColorBrush x:Key="SubtleBrush" Color="Gray"/>

    <!-- Start of Rating Control Styles-->
    <Style TargetType="controls:Rating">

        <Setter Property="Background" Value="{StaticResource PhoneBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />

        <!-- default width and height of native rating control, as seen in marketplace -->
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="30" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Rating">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DragHelperStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Visible"
                                                      GeneratedDuration="0:0:0.1" />
                                    <VisualTransition To="Collapsed"
                                                      GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Collapsed" />

                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DragBorderElement"
                                                         Storyboard.TargetProperty="Opacity" To="1.0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Root" Background="Transparent">
                            <Border x:Name="DragBorderElement" 
                                        Background="{TemplateBinding Background}" 
                                        Width="35" Height="30" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Top"
                                        Opacity="0">
                                <TextBlock x:Name="DragTextBlockElement" TextAlignment="Center" Text="3.5" />
                            </Border>
                            <Grid x:Name="UnfilledGridElement" />

                            <!-- layered on top of InactiveItems by being placed in 
                                 the same row, clipping mask determines how many 
                                 stars are displayed. The border is used to apply
                                 a clipping mask to the filled RatingItems -->
                            <Border x:Name="FilledClipElement">
                                <Grid x:Name="FilledGridElement" />
                            </Border>


                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- can be used to specify attributes for the filled items such as
             custom fill or border. -->
        <Setter Property="FilledItemStyle">
            <Setter.Value>
                <Style TargetType="controls:RatingItem">
                    <Setter Property="Background" Value="{StaticResource PhoneForegroundBrush}" />
                </Style>
            </Setter.Value>
        </Setter>

        <!-- can be used to specify attributes for the unfilled items such as
             custom fill or border. -->
        <Setter Property="UnfilledItemStyle">
            <Setter.Value>
                <Style TargetType="controls:RatingItem">
                    <Setter Property="Background" Value="{StaticResource SubtleBrush}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- This style and control template define the layout for the RatingItems.
         It can be overriden to support arbitrary shapes or other UIElements. -->
    <Style TargetType="controls:RatingItem">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RatingItem">
                    <!--<Viewbox>-->
                    <Path 
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{Binding StrokeThickness, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Stretch="Fill"
                            Data="F1 M 5.0,0.0 L 6.1,3.5 L 9.8,3.5 L 6.8,5.6 L 7.9,9.0 L 5.0,6.9 L 2.1,9.1 L 3.2,5.6 L 0.2,3.5 L 3.9,3.5 L 5.0,0.0 Z" />
                    <!--</Viewbox>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- End of Rating Control Styles-->


    <!--Expander Viewer control-->


    <Style TargetType="controls:HeaderedItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:HeaderedItemsControl">
                    <Grid x:Name="Root">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentControl x:Name="HeaderContent" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                        <ItemsPresenter x:Name="Items" Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="controls:ExpanderView">
        <Style.Setters>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:ExpanderView">
                        <Grid>

                            <Grid.Resources>
                                <QuadraticEase EasingMode="EaseOut" x:Key="QuadraticEaseOut"/>
                                <QuadraticEase EasingMode="EaseInOut" x:Key="QuadraticEaseInOut"/>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="41"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualStateGroup.States>
                                        <VisualState x:Name="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" 
                                                                 Storyboard.TargetName="ItemsCanvas"
                                                                 Duration="0" To="0"/>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                 Storyboard.TargetName="ItemsCanvas"
                                                                 Duration="0" To="0.0"/>
                                                <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" 
                                                                 Storyboard.TargetName="Header" Duration="0" To="White" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" 
                                                                 Storyboard.TargetName="ItemsCanvas" Duration="0" EnableDependentAnimation="True"/>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                 Storyboard.TargetName="ItemsCanvas"
                                                                 Duration="0" To="1.0" />
                                                <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" 
                                                                 Storyboard.TargetName="Header" Duration="0" To="Black" />

                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup.States>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Collapsed" To="Expanded" 
                                                          GeneratedDuration="0:0:0.15">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas" EnableDependentAnimation="True">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1" EasingFunction="{StaticResource QuadraticEaseOut}" x:Name="CollapsedToExpandedKeyFrame"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas" Duration="0" To="1.0"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Expanded" To="Collapsed" 
                                                          GeneratedDuration="0:0:0.15" >
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas" EnableDependentAnimation="True">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="1" EasingFunction="{StaticResource QuadraticEaseInOut}" x:Name="ExpandedToCollapsedKeyFrame"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource QuadraticEaseInOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="1.0" EasingFunction="{StaticResource QuadraticEaseInOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.0" EasingFunction="{StaticResource QuadraticEaseInOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                                                               Storyboard.TargetName="ItemsCanvas" EnableDependentAnimation="True">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="0.0" EasingFunction="{StaticResource QuadraticEaseInOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="-35" EasingFunction="{StaticResource QuadraticEaseInOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandabilityStates">
                                    <VisualState x:Name="Expandable"/>
                                    <VisualState x:Name="NonExpandable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandableContent">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Line">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NonExpandableContent">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ListBoxItem x:Name="ExpandableContent" 
                                         Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2"
                                         HorizontalContentAlignment="Stretch"
                                         >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="41"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentControl x:Name="Header"
                                                    HorizontalContentAlignment="Stretch"
                                                    HorizontalAlignment="Stretch"
                                                    Content="{TemplateBinding Header}"
                                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                    Grid.Row="0" Grid.Column="0"
                                                    Grid.ColumnSpan="2"/>
                                    <ContentControl x:Name="Expander"                                            
                                                    Margin="11,0,0,0"
                                                    Grid.Row="1" Grid.Column="1"
                                                    HorizontalContentAlignment="Stretch"
                                                    HorizontalAlignment="Stretch"
                                                    Content="{TemplateBinding Expander}"
                                                    ContentTemplate="{TemplateBinding ExpanderTemplate}"/>
                                    <Grid x:Name="ExpanderPanel" Grid.Row="0" Grid.Column="0" 
                                          Grid.RowSpan="2" Grid.ColumnSpan="2" Background="Transparent"/>
                                </Grid>

                            </ListBoxItem>
                            <!--Comment this line if you don't want line in expansion-->
                            <Line x:Name="Line" Grid.Row="1" Grid.Column="1"
                                  Grid.RowSpan="2"
                                  HorizontalAlignment="Left"
                                  Stroke="{StaticResource SubtleBrush}" 
                                  StrokeThickness="3" X1="0" Y1="0" X2="0" Y2="1"
                                  Stretch="Fill"/>
                            <ContentControl x:Name="NonExpandableContent"
                                            Grid.Row="0" Grid.Column="0" 
                                            Grid.RowSpan="2" Grid.ColumnSpan="2"
                                            Visibility="Collapsed"
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Content="{TemplateBinding NonExpandableHeader}"
                                            ContentTemplate="{TemplateBinding NonExpandableHeaderTemplate}"/>
                            <Canvas x:Name="ItemsCanvas" 
                                    Grid.Row="2" Grid.Column="1"
                                    Opacity="0.0" 
                                    Margin="11,0,0,0">

                                <ItemsPresenter x:Name="Presenter"/>
                                <Canvas.RenderTransform>
                                    <CompositeTransform TranslateY="0.0"/>
                                </Canvas.RenderTransform>
                            </Canvas>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!-- End of Expander viewer control-->
</ResourceDictionary>
